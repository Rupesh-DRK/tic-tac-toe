{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Square","_ref","value","onSquareClick","React","createElement","className","onClick","Board","xIsNext","setXisNext","useState","squares","setSquares","Array","fill","handleClick","i","Winner","nextSquares","slice","winner","status","lines","length","a","b","c","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"0LAKA,SAASA,EAAMC,GAAuB,IAAtBC,MAACA,EAAKC,cAACA,GAAcF,EAEnC,OACEG,IAAAC,cAAA,UAAQC,UAAU,SAASC,QAASJ,GAAgBD,GAIzC,SAASM,IACtB,MAAOC,EAAQC,GAAYC,oBAAS,IAC7BC,EAAQC,GAAYF,mBAASG,MAAM,GAAGC,KAAK,OAClD,SAASC,EAAYC,GACnB,GAAIL,EAAQK,IAAOC,EAAON,GACxB,OAEF,MAAMO,EAAcP,EAAQQ,QAE5BD,EAAYF,GADTR,EACY,IAGE,IAEjBI,EAAWM,GACXT,GAAYD,GAEd,MAAMY,EAASH,EAAON,GACtB,IAAIU,EAOJ,OALEA,EADCD,EACQ,eAAgBA,EAGhB,sBAAuBZ,EAAS,IAAM,KAG/CL,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UAASF,IAAAC,cAAA,UAAKiB,IAC7BlB,IAAAC,cAAA,OAAKC,UAAU,SACjBF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,MAE7DZ,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,MAE7DZ,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,KAC3DZ,IAAAC,cAACL,EAAM,CAACE,MAAOU,EAAQ,GAAIT,cAAeA,IAAKa,EAAY,QAQjE,SAASE,EAAON,GACd,MAAMW,EAAM,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEP,IAAK,IAAIN,EAAE,EAAEA,EAAEM,EAAMC,OAAOP,IAAI,CAC9B,MAAOQ,EAAEC,EAAEC,GAAGJ,EAAMN,GACpB,GAAIL,EAAQa,IAAMb,EAAQa,KAAOb,EAAQc,IAAMd,EAAQa,KAAOb,EAAQe,GACpE,OAAOf,EAAQa,GAGrB,OAAO,KCnEQG,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKhC,IAAiD,IAAhDkC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAStC,EACpEkC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACyC,EAAG,QAORlB","file":"static/js/main.74e42bc6.chunk.js","sourcesContent":["\nimport './App.css';\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction Square({value,onSquareClick}){\n  \n  return (\n    <button className='square' onClick={onSquareClick}>{value}</button>\n  );\n}\n\nexport default function Board(){\n  const [xIsNext,setXisNext]=useState(true);\n  const [squares,setSquares]=useState(Array(9).fill(null));\n  function handleClick(i){\n    if (squares[i] ||  Winner(squares)){\n      return ;\n    }\n    const nextSquares = squares.slice();\n    if(xIsNext){\n    nextSquares[i]=\"X\";\n    }\n    else{\n      nextSquares[i]=\"O\";\n    }\n    setSquares(nextSquares);\n    setXisNext(!xIsNext);\n  }\n  const winner = Winner(squares);\n  let status;\n  if(winner){\n    status = \"Winner :    \" +winner;\n  }\n  else{\n    status = 'Next Player :     ' +(xIsNext? \"X\" : 'O');\n  }\n  return (\n    <div className='xox'>\n      <div className='player'><h1>{status}</h1></div>\n      <div className='board'>\n    <div className='rows'>\n      <Square value={squares[0]} onSquareClick={()=> handleClick(0)}/>\n      <Square value={squares[1]} onSquareClick={()=> handleClick(1)} />\n      <Square value={squares[2]} onSquareClick={()=> handleClick(2)} />\n    </div>\n    <div className='rows'>\n      <Square value={squares[3]} onSquareClick={()=> handleClick(3)} />\n      <Square value={squares[4]} onSquareClick={()=> handleClick(4)} />\n      <Square value={squares[5]} onSquareClick={()=> handleClick(5)} />\n    </div>\n    <div className='rows'>\n      <Square value={squares[6]} onSquareClick={()=> handleClick(6)} />\n      <Square value={squares[7]} onSquareClick={()=> handleClick(7)} />\n      <Square value={squares[8]} onSquareClick={()=> handleClick(8)} />\n    </div>\n    </div>\n    </div>\n\n  );\n}\n\nfunction Winner(squares){\n  const lines=[\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n  for (let i=0;i<lines.length;i++){\n    const [a,b,c]=lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n  }\n}\nreturn null;\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}